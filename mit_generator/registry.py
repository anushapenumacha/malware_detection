#/usr/bin/env python

from utils import *
from process import Process

def handle_registry(processes, line):
    time, fields = parse_line(line)
    operation = fields[0]
    pid = None
    keypath = None

    if (operation == "RegNtPreCreateKeyEx" or 
        operation == "RegNtPreCreateKey"):
        pid = extract_field(fields[2])
        keypath = extract_field(fields[1])

    elif operation == "RegNtPreSetValueKey":
        pid = extract_field(fields[2])
        keypath = extract_field(fields[1])

    elif operation == "RegNtDeleteKey":
        pid = extract_field(fields[2])
        keypath = extract_field(fields[1])

    elif operation == "RegNtPreRenameKey":
        pid = extract_field(fields[3])
        keypath = extract_field(fields[2])

    elif operation == "RegNtPreReplaceKey":
        pid = extract_field(fields[2])
        keypath = extract_field(fields[1])

    else:
        pass

    if pid is not None:

        #If process is previously unseen, add to list
        if pid not in processes:
            processes[pid] = Process(pid, None)
            processes[pid].set_firstseen(time)

        #Add registry to list of registries accessed by this process
        if keypath is not None:
            processes[pid].add_registry(keypath)

        #If registry key is CurrentVersion/Run, raise suspicion
        if "\\Microsoft\\Windows\\CurrentVersion\\Run" in keypath:
            processes[pid].add_suspicion(1.0)
