#!/usr/bin/env python

from sys import argv
from parser import Parser
from registry import handle_registry
from filesystem import handle_file
from process_activity import handle_process

REG_OPS = [
    "RegNtPreCreateKeyEx",
    "RegNtCreateKey",
    "RegNtPreSetValueKey",
    "RegNtDeleteKey",
    "RegNtPreRenameKey",
    "RegNtPreReplaceKey"
]

FILE_OPS = [
    "IRP_MJ_CREATE",
    "IRP_MJ_SET_INFORMATION",
    "IRP_MJ_READ",
    "IRP_MJ_WRITE"
]

PROC_OPS = [
    "True-ProcessCreated",
    "Proces-memory-write-accessattempt",
    "Proces-operation-memory-write-accessattempt",
    "Proces-suspend-resume-accessattempt",
    "Proces-terminate-attempt",
    "Proces-smemory-write-delete-access-attempt",
    "Process-Terminated"
]

def main(filename):
    parser = Parser()

    with open(filename) as fp:
        for line in fp:
            if any(op in line for op in REG_OPS):
                handle_registry(parser.processes, line)

            elif any(op in line for op in FILE_OPS):
                handle_file(parser.processes, line)

            elif any(op in line for op in PROC_OPS):
                handle_process(parse.processes, line)

            else:
                pass

    parser.print_process()

if __name__ == '__main__':
    if len(argv) is not 2:
        print "Must provide a log file to process."
        exit(1)
    else:
        main(argv[1])
