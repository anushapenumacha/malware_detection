#!/usr/bin/env python

class Process:
    def __init__(self, pid=None, ppid=None):
        self.first_seen = None
        self.pid = pid
        self.ppid = ppid
        self.source_image = None
        self.suspicion = 0.0
        self.children = []
        self.regs = []
        self.created_files = []
        self.read_files = []
        self.written_files = []
        self.terminated = False

    def set_firstseen(self, time):
        self.first_seen = time

    def set_parent(self, ppid):
        self.ppid = ppid

    def set_sourceimage(self, filename):
        self.source_image = filename

    def add_suspicion(self, value):
        self.suspicion += float(value)

    def add_child(self, pid):
        if pid not in self.children:
            self.children.append(pid)
        
    def add_registry(self, reg):
        if reg not in self.regs:
            self.regs.append(reg)

    def add_createfile(self, filename):
        if filename not in created_files:
            self.created_files.append(filename)

    def add_readfile(self, filename):
        if filename not in read_files:
            self.read_files.append(filename)

    def add_writtenfile(self, filename):
        if filename not in written_files:
            self.written_files.append(filename)            

    def is_terminated(self):
        self.terminated = True
